<html>
<head>
<title>Termcast</title>
<link href="../static/styles/main.css" media="screen" rel="stylesheet" type="text/css" />
<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"></script>
<script language="javascript">
var INTERVAL_ID;
var COLS = 80;
var ROWS = 24;

// two different locks: client side and server side.
//
// First level lock: If we're downloading the ajax response,
// prevent beginning a download from a succeeding timer process.
//
// Second level lock: When processing the terminal screen, don't
// let any other webserver processes begin. Without this, the
// terminal frames will not cache properly.

var downloading;
var pos_elems = [];

start();

$(function() {
    tc = $('#container');

    for (var row = 0; row < ROWS; ++row) {
        for (var col = 0; col < COLS; ++col) {
            var span = '<span id="pos-' + row + '-' + col + '">&nbsp;</span>';
            $('#container').append(span);
        }
        tc.append('<span></span><br />');
    }

});

function termcast_cb(data) {
    downloading = 1;
    if (data.length > 0) {
        var tc = $('#container');

        var obj = JSON.parse(data);
        if (obj.fresh) {
            for (var row = 0; row < ROWS; ++row) {
                for (var col = 0; col < COLS; ++col) {
                    var selector = '#pos-' + row + '-' + col;
                    var content = obj.fresh[row][col].v;
                    if (content == ' ') {
                        $(selector)
                            .text('.')
                            .css({color: 'black'});
                    }
                    else {
                        $(selector)
                            .text(content)
                            .css({color: 'white'});
                    }
                }
            }
        }
        else if (obj.update) {

        }

    }
    else {
        window.location = '/';
        clearInterval(INTERVAL_ID);
    }
    downloading = 0;
}

function update_termcast() {
    if (downloading) return;
    downloading = 1;
    $.get('/socket/[% stream_id %]', termcast_cb);
}

function start() {
    INTERVAL_ID = setInterval('update_termcast()', 300);
}

</script>
</head>
<body>
<h1>Web Termcast Viewer</h1>
<div id="container" style="font-family: monaco, consolas, lucida console, monospace;-webkit-border-radius: 10px; -moz-border-radius: 10px; border-radius: 10px; padding: 10px; background-color: black; font-size: 80%; width: 50em;">
</div>
</body>
</html>

